name: Cypress Stress Testing

on: [push, pull_request]

jobs:

  build-uberjar:
    runs-on: ubuntu-20.04
    timeout-minutes: 10
    steps:
    - name: Download prebuilt uberjar
      run: curl -o metabase.jar -L https://downloads.metabase.com/v0.37.8/metabase.jar
    - uses: actions/upload-artifact@v2
      with:
        name: uberjar
        path: './metabase.jar'

  stress-test-cypress-tasks-1:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-2:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-3:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-4:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-5:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-6:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-7:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-8:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-9:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-10:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-11:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-12:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-13:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-14:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-15:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-16:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-17:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-18:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-19:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm

  stress-test-cypress-tasks-20:
    runs-on: ubuntu-20.04
    timeout-minutes: 45
    needs: build-uberjar
    steps:
    - uses: actions/checkout@v2
    - uses: actions/download-artifact@v2
      name: Retrieve uberjar artifact
      with:
        name: uberjar
    - name: Prepare uberjar
      run: |
        mkdir -p target/uberjar
        mv metabase.jar target/uberjar/
        ls -l target/uberjar/
    - name: Prepare Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 14.x
    - name: Prepare JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Install Clojure CLI
      run: |
        curl -O https://download.clojure.org/install/linux-install-1.10.1.727.sh
        chmod +x linux-install-1.10.1.727.sh
        sudo ./linux-install-1.10.1.727.sh
    - name: Check versions
      run: |
        echo "Node.js `node --version`"
        echo "yarn `yarn --version`"
        java -version
    - name: Get yarn cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

    - run: ./bin/build version

    - run: yarn test-cypress-no-build --testFiles frontend/test/metabase/scenarios/admin/troubleshooting/
      name: Run Cypress tests
      env:
        TERM: xterm